name: "API and migrations status"
description: "Check migrations and health"
inputs:
  URL:  # id of input
    description: "URL Website"
  CHANNEL_ID: 
    description: "Channel ID"
  SLACK_BOT_TOKEN:
    description: "Slack bot token"
outputs:
  CODE:
    description: "Status Code"
    value: ${{ steps.status_code.outputs.status_code }}
  MIGRATIONS_CHECK:
    description: "Migrations Check"
    value: ${{ steps.migrations_check.outputs.migrations_check }}
  API_HEALTH:
    description: "API Health"
    value: ${{ steps.api_health.outputs.api_health }}
runs:
  using: "composite"
  steps:
    - name: API Health
      id: api_health
      run: |
        if ! code=$(curl -w 'Type: %{content_type}\nCode: %{response_code}\n' ${{ inputs.URL }}/health_check/ | grep -w Code | sed "s/ //g" | cut -d ":" -f 2); then echo "Failure :fire:"; fi
        if ! check=$(curl -v GET ${{ inputs.URL }}/health_check/\?format\=json | grep -w MigrationsHealthCheck | cut -d \" -f 4); then echo "Failure :fire:"; fi
        echo "api_health=$(if [ "$code" != "200" ] && [ "$check" != "working"  ]; then echo "New deployment failed :fire:"; else echo "New deployment ready :rocket:"; fi)" >> $GITHUB_OUTPUT
      shell: bash

    - name: API Status Code
      id: status_code
      run: |
        if ! code=$(curl -w 'Type: %{content_type}\nCode: %{response_code}\n' ${{ inputs.URL }}/health_check/ | grep -w Code | sed "s/ //g" | cut -d ":" -f 2); then echo "Failure :fire:"; fi
        echo "status_code=$(if [ "$code" = "200" ]; then echo "Completed :white_check_mark:"; else echo "Failure :fire:"; fi)" >> $GITHUB_OUTPUT
      shell: bash

    - name: API Migrations Check
      id: migrations_check
      run: | 
        if ! check=$(curl -v GET ${{ inputs.URL }}/health_check/\?format\=json | grep -w MigrationsHealthCheck | cut -d \" -f 4); then echo "Failure :fire:"; fi
        echo "migrations_check=$(if [ "$check" = "working" ]; then echo "Completed :white_check_mark:"; else echo "Failure :fire:"; fi)" >> $GITHUB_OUTPUT
      shell: bash

    - name: Notify to Slack channel
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: ${{ inputs.CHANNEL_ID}}
        payload: |
          {
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*${{ steps.api_health.outputs.api_health }}*"
                }
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Status:*\n ${{ steps.status_code.outputs.status_code }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Environment:*\n ${{ github.ref_name }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Migrations:*\n ${{ steps.migrations_check.outputs.migrations_check }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Changes:*\n"
                  },
                  {
                    "type": "mrkdwn",
                    "text": ${{toJSON(github.event.head_commit.message) }}
                  }
                ]
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ inputs.SLACK_BOT_TOKEN}}

